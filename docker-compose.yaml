services:
  broker:
    build:
      context: ./broker
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=postgres sslmode=disable"

  logger:
    build:
      context: ./logger
      dockerfile: Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - mongo

  mail:
    build:
      context: ./mail
      dockerfile: Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: "localhost"
      MAIL_HOST: "mailhog"
      MAIL_PORT: "1025"
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: "none"
      MAIL_SENDER_NAME: "Microservice"
      MAIL_SENDER_ADDRESS: "microservice@example.com"

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - microservice-db:/var/lib/postgresql/data

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo-db:/data/db

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - rabbitmq:/var/lib/rabbitmq/


  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"



volumes:
  microservice-db:
  mongo-db:
  rabbitmq: