version: "3"

services:
  caddy:
    image: 4925k/microservice-caddy
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy:/data
      - caddy-config:/config
  fe:
    image: 4925k/microservice-fe
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://backend"

  broker:
    image: 4925k/microservice-broker
    deploy:
      mode: replicated
      replicas: 1

  auth:
    image: 4925k/microservice-auth
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=postgres sslmode=disable"

  listener:
    image: 4925k/microservice-listener
    deploy:
      mode: replicated
      replicas: 1

  logger:
    image: 4925k/microservice-logger
    deploy:
      mode:  replicated
      replicas: 1

  mail:
    image: 4925k/microservice-mail
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: "localhost"
      MAIL_HOST: "mailhog"
      MAIL_PORT: "1025"
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: "none"
      MAIL_SENDER_NAME: "Microservice"
      MAIL_SENDER_ADDRESS: "microservice@example.com"

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    deploy:
      mode: global

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: global

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo-db:/data/db

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - microservice-db:/var/lib/postgresql/data

volumes:
  microservice-db:
  mongo-db:
  caddy:
    external: true
  caddy-config: